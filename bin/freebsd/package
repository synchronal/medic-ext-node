#!/usr/bin/env bash

VERSION=$(grep '^version' Cargo.toml | cut -d'"' -f2)

SYSTEM=$(uname -o)
ARCH=$(uname -p)
KERNEL=$(uname -K | head -c2)

PKG_DIR="tmp/${SYSTEM}:${KERNEL}:${ARCH}"

echo "==== Building workspace"
cargo build --workspace -r

outputs=(
  medic-check-node
  medic-outdated-node
)
cmds=(${outputs[@]})

echo "==== Creating staging directory"
if [[ -d "${PKG_DIR}" ]]; then
  rm -rf "${PKG_DIR}"
fi
mkdir -p "${PKG_DIR}/stage/usr/local/bin"

echo "==== Copying binaries into staging directory"
for cmd in ${cmds[@]}; do
  cp target/release/${cmd} "${PKG_DIR}/stage/usr/local/bin/"
done

echo "==== Creating pkg-plist"
for cmd in ${cmds[@]}; do
  echo "bin/${cmd}" >> "${PKG_DIR}/pkg-plist"
done

echo "==== Creating +MANIFEST"
cat > "${PKG_DIR}/+MANIFEST" <<EOF
{
  "name": "medic-ext-node",
  "version": "${VERSION}",
  "origin": "devel/medic-ext-node",
  "prefix": "/usr/local",
  "desc": "NodeJS extension for devel/medic",
  "comment": "Command line development workflow tool",
  "maintainer": "support@reflective.dev",
  "scripts": {},
  "www": "https://github.com/synchronal/medic-ext-node"
}
EOF

echo "==== Creating package"
pkg create -M "${PKG_DIR}/+MANIFEST" -r "${PKG_DIR}/stage" -p "${PKG_DIR}/pkg-plist"
